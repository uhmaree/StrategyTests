<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="CopilotDiffPersistence">
    <option name="pendingDiffs">
      <map>
        <entry key="$PROJECT_DIR$/src/Main.java">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/src/Main.java" />
              <option name="originalContent" value="//TIP To &lt;b&gt;Run&lt;/b&gt; code, press &lt;shortcut actionId=&quot;Run&quot;/&gt; or&#10;// click the &lt;icon src=&quot;AllIcons.Actions.Execute&quot;/&gt; icon in the gutter.&#10;public class Main {&#10;    public static void main(String[] args)&#10;    {&#10;       class Cheat implements Strategy&#10;       {&#10;&#10;               public String getMove(String playerMove)&#10;               {&#10;                   String computerMove = &quot;&quot;;&#10;                   switch (playerMove)&#10;                   {&#10;                       case &quot;R&quot;:&#10;                           computerMove = &quot;P&quot;;&#10;                           break;&#10;                       case &quot;P&quot;:&#10;                           computerMove = &quot;S&quot;;&#10;                           break;&#10;                       case &quot;S&quot;:&#10;                           computerMove = &quot;R&quot;;&#10;                           break;&#10;                       default:&#10;                            computerMove = &quot;X&quot;;&#10;                            break;&#10;                    }&#10;                     return computerMove;&#10;               }&#10;&#10;       }&#10;       Strategy cheat = new Cheat();&#10;       System.out.println(cheat.getMove(&quot;R&quot;));  // should print &quot;P&quot;&#10;       System.out.println(cheat.getMove(&quot;P&quot;));  // should print &quot;S&quot;&#10;       System.out.println(cheat.getMove(&quot;S&quot;));  // should print&quot;R&quot;&#10;    }&#10;}" />
              <option name="updatedContent" value="//TIP To &lt;b&gt;Run&lt;/b&gt; code, press &lt;shortcut actionId=&quot;Run&quot;/&gt; or&#10;// click the &lt;icon src=&quot;AllIcons.Actions.Execute&quot;/&gt; icon in the gutter.&#10;public class Main {&#10;    public static void main(String[] args)&#10;    {&#10;       class Cheat implements Strategy&#10;       {&#10;&#10;               public String getMove(String playerMove)&#10;               {&#10;                   String computerMove = &quot;&quot;;&#10;                   switch (playerMove)&#10;                   {&#10;                       case &quot;R&quot;:&#10;                           computerMove = &quot;P&quot;;&#10;                           break;&#10;                       case &quot;P&quot;:&#10;                           computerMove = &quot;S&quot;;&#10;                           break;&#10;                       case &quot;S&quot;:&#10;                           computerMove = &quot;R&quot;;&#10;                           break;&#10;                       default:&#10;                            computerMove = &quot;X&quot;;&#10;                            break;&#10;                    }&#10;                     return computerMove;&#10;               }&#10;&#10;       }&#10;       Strategy cheat = new Cheat();&#10;       System.out.println(cheat.getMove(&quot;R&quot;));  // should print &quot;P&quot;&#10;       System.out.println(cheat.getMove(&quot;P&quot;));  // should print &quot;S&quot;&#10;       System.out.println(cheat.getMove(&quot;S&quot;));  // should print&quot;R&quot;&#10;    }&#10;}" />
            </PendingDiffInfo>
          </value>
        </entry>
      </map>
    </option>
  </component>
</project>